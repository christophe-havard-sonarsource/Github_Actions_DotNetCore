# This is a basic workflow to help you get started with Actions

name: SonarQube Analysis

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: all
  pull_request:
    branches: all

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: install jdk
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.11

      # Runs a set of commands using the runners shell
      - name: Install SonarScanner .NET Global tool
        run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH="$PATH:/root/.dotnet/tools"
          
      - name: SonarScanner STEP 1 - BEGIN
        run: dotnet sonarscanner begin /k:"Github_Actions_DotNetCore" /d:"sonar.login=${{secrets.SONAR_TOKEN}}" /d:"sonar.host.url=${{secrets.SONAR_URL}}"
          
      - name: Build & Test
        run: |         
          dotnet restore
          dotnet build --no-restore --configuration Release
          dotnet test --no-build --configuration Release
          
      - name: SonarScanner STEP 2 - END
        run: dotnet sonarscanner end /d:"sonar.login=${{secrets.SONAR_TOKEN}}"
